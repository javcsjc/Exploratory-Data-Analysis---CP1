class(amazon)
amazon2 <- strsplit(amazon, Year, Month, Day, Weekday)
amazon2 <- strsplit(amazon, "Year", "Month", "Day", "Weekday")
View(amazon2)
?strsplit
amazon2 <- strsplit(amazon, "" ")
amazon2 <- strsplit(amazon, "" ")
amazon2 <- amazon
strsplit(amazon2, " ")
View(amazon2)
?separate
amazon2 <- separate(amazon, x, "Year", "Month", "Day", "Weekday")
amazon2 <- data.frame(amazon)
class(amazon2)
View(amazon2)
amazon2 <- separate(amazon2, amazon, "Year", "Month", "Day", "Weekday")
amazon2 <- separate(amazon2, amazon, sep=" ")
amazon2 <- strsplit(amazon2, sep=" ")
amazon2 <- strsplit(amazon2, amazon, "Year", "Month", "Day", "Weekday")
View(amazon2)
str(amazon2)
amazon2 <- select(amazon2, amazon = char)
amazon2 <- select(amazon2, amazon = "char")
amazon2 <- select(amazon2, amazon = as.character())
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now()
nyc <- now(tzone= "America/New_York")
nyc
depart <- nyc+ days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
with_tz(arrive,"Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia_Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz= "Singapore")
last_time
?new_interval
how_long <- arrive - last_time
how_long <- new_interval(last_time, arrive)
as.period(how_long)
amazon3 <- separate(amazon2, c("Year", "Month", "Day", "Weekday"))
amazon3 <- separate(amazon2, amazon, c("Year", "Month", "Day", "Weekday"))
stopwatch()
amazon3 <- separate(amazon2, amazon, c("Year", "Month", "Day", "Weekday"))
View(amazon3)
year <- group_by_year(amazon3, Year)
year <- group_by(amazon3, Year)
str(year)
year
View(year=2012)
View(year, Year ="2012")
View(year)
2012 <- select(year, Year = 2012)
2012 <- select(year, Year = "2012")
2012 <- filter(year, Year="2012")
2012 <- filter(year, Year=2012)
2012 <- filter(year, Year[2012,])
count(year$Year="2012")
count(year, Year = 2012
count(year, Year = "2012")
2012 <- filter(amazon3, Year = "2012")
str(amazon3)
amazon3 %>% filter(Year="2012")
count(year)
count(year, Year())
mean(year)
count(year, Year(2012))
class(year)
year
count(year, Weekday= "Monday")
?count
??count
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
count(year, Weekday= "Monday")
count(amazon3, Year = "2012")
count(amazon3)
count(amazon3, 2012)
count(amazon3, Year=2012)
filter(amazon3, Year)
filter(amazon3, Year=2012
filter(amazon3, Year=2012)
filter(amazon3, Year="2012")
?filter
filter(amazon3, Year=="2012")
filter(amazon3, Year=="2012" & Weekday == "Monday")
`q1` <- read.csv("/var/folders/qy/vwz9ptts6wvb_6883sb_w7800000gq/T//RtmptWueyw/data1787d19f62d")
View(`q1`)
colnames(q1)
q1 <- read.csv("/var/folders/qy/vwz9ptts6wvb_6883sb_w7800000gq/T//RtmptWueyw/data1787d19f62d")
View(q1)
colnames(q1)
columnNames = colnames(q1)
?strsplt
?strsplt()
??strsplt()
strsplt(columnNames, "wgtp")
strsplit(columnNames, "wgtp")
columnNames2 <- strsplit(columnNames, "wgtp")
View(columnNames2)
View(columnNames)
columnNames2 <- strsplit(columnNames, "wgtp", fixed = TRUE)
columnNames2
View(columnNames2)
columnNames2 <- strsplit(columnNames(), "wgtp", fixed = TRUE)
columnNames2 <- strsplit(columnNames, "wgtp", fixed = TRUE)
columnNames2 <- strsplit(columnNames, columnNames"wgtp", fixed = TRUE)
strsplit(columnNames, "wgtp ", fixed=TRUE)
columnNames2 <- strsplit(columnNames, "wgtp", fixed=TRUE)
View(columnNames2)
columnNames2 <- strsplit(columnNames, "wgtp ", fixed=TRUE)
View(columnNames2)
columnNames2
columnNames2 <- strsplit(columnNames, "wgtp  ", fixed=TRUE)
columnNames2
columnNames2 <- strsplit(columnNames, "wgtp")
columnNames2
columnNames2[123]
View(columnNames2)
student6 <- read.delim("/var/folders/qy/vwz9ptts6wvb_6883sb_w7800000gq/T//RtmptWueyw/data17851499225")
View(student6)
student7 <- read.table("/var/folders/qy/vwz9ptts6wvb_6883sb_w7800000gq/T//RtmptWueyw/data1783519e4d4", header=TRUE, quote="\"")
View(student7)
student8 <- read.table("/var/folders/qy/vwz9ptts6wvb_6883sb_w7800000gq/T//RtmptWueyw/data17836fe3588", header=TRUE, quote="\"")
View(student8)
rm(list=ls())
ls()
library(swirl)
swirk()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
lsit.files()
list.files()
?list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("/testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
lsit.files()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
unlink(file.path("testdir2", "testdir3"), recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_length)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse= " ")
my_name <- c(my_char, "Alberto")
my_name
paste(my_name, collapse= " ")
paste("Hello", "world!", sep= " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x *3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrxi
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("bill, "Gina", "Kelly", "Sean"")
patients <- c("Bill", "Gina", "Kelly", "Sean"")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my.data <- data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6 != 8 && 4>3.9
isTRUE(6>4)
identical('twins', "twins")
xor(5==6, !FALSE)
ints <- samp,e(10)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints)
any(ints < 0)
all(ints > 0)
library(swirl)
rm(list=ls())
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function")
boring_function("My first function!")
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
siwlr()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
?low
low
high
hist(ppm, col = "green" breaks = 100)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline( v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg)
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, "east")
east <- subset(pollution)
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution$pm25, region == "west"), col = "green")
hist(subset(pollution, region == "west"), col = "green")
hist(pollution$pm25(subset(pollution, region == "west"), col = "green")
skip()
with(pollution(plot(latitude, pm25)))
skip()
abline(12, lwd = 2, lty = 2)
abline(v=12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region =="west")
plot(west$latitude, west$pm25, main == "West")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(faithful, eruptions, waiting)
plot(faithful, x= eruptions, y =waiting)
plot(faithful, x= faithful$eruptions, y = faithful$waiting)
skip()
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
plot(faithful, x= faithful$eruptions, y = faithful$waiting)
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region, data = state, layout = c(4,1))
xyplot(Life.Exp~Income|region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month|ozone, data=airquality)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, set = n)
plot(airquality$Wind, airquality$Ozone, type ="n")
title(main="Wind and Ozone in NYC")
may <- airquality$Month=5
may <- subset(airquality$Month=5)
skip()
points(Wind, Ozone)
skip()
notmay <- subset(airquality, !Month==5)
notmay <- subset(airquality, Month!==5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone, col="red", pch=13)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lwd=2, lty=2)
par(mfrow(1,2))
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer="TRUE")
mtext("Ozone and Weather in New York City", outer=TRUE)
getwd()
warnings()
rm(list=ls())
getwd()
setwd("./ExData_CP1")
getwd()
ls()
list.files()
household_power_consumption <- read.csv("~/Desktop/Data Science Specialization - Coursera/datasciencecoursera/ExData_CP1/household_power_consumption.txt", sep=";", na.strings="?")
View(household_power_consumption)
hpc <- household_power_consumption
hpc
head(hpc)
tail(hpc)
summary(hpc)
str(hpc)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
subset <- select(hpc, Date= "01/02/2007" | "02/02/2007")
subset <- select(hpc, hpc$Date= "01/02/2007" | "02/02/2007")
subset <- select(hpc, hpc$Date == "01/02/2007" | "02/02/2007")
subset <- select(hpc, hpc$Date ="01/02/2007")
subset <- filter(hpc, Date = "01/02/2007")
?filter
subset <- filter(hpc, Date == "01/02/2007")
View(subset)
subset <- select(hpc, Date == "01/02/2007")
subset <- select(hpc, Date == 01/02/2007)
hpc <- hpc$Date = as.Date()
hpc <- as.Date(hpc$Date)
str(hpc)
View(hpc)
hpc <- household_power_consumption
hpc <- hpc$Date = as.Date(hpc$Date)
hpc <- household_power_consumption
hpc$Date = as.Date(hpc$Date)
str(hpc)
head(hpc)
